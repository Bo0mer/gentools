// Code generated by mongen. DO NOT EDIT.
package examplesmws

import (
	alias1 "context"
	alias5 "github.com/Bo0mer/gentools/cmd/mongen/examples"
	alias2 "go.opencensus.io/stats"
	alias3 "go.opencensus.io/tag"
	alias4 "time"
)

type monitoringOCService struct {
	next        alias5.OCService
	totalOps    *alias2.Int64Measure
	failedOps   *alias2.Int64Measure
	opsDuration *alias2.Float64Measure
	ctxFunc     func(alias1.Context) alias1.Context
}

// NewMonitoringOCService creates new monitoring middleware.
func NewMonitoringOCService(next alias5.OCService, totalOps *alias2.Int64Measure, failedOps *alias2.Int64Measure, opsDuration *alias2.Float64Measure, ctxFunc func(alias1.Context) alias1.Context) alias5.OCService {
	return &monitoringOCService{next, totalOps, failedOps, opsDuration, ctxFunc}
}
func (m *monitoringOCService) DoWork(arg1 int, arg2 string) (string, error) {
	ctx := alias1.Background()
	if m.ctxFunc != nil {
		ctx = m.ctxFunc(ctx)
	}
	tagKey := alias3.MustNewKey("operation")
	var err error
	if ctx, err = alias3.New(ctx, alias3.Insert(tagKey, "do_work")); err != nil {
		panic(err)
	}
	alias2.Record(ctx, m.totalOps.M(1))
	start := alias4.Now()
	result1, result2 := m.next.DoWork(arg1, arg2)
	alias2.Record(ctx, m.opsDuration.M(alias4.Since(start).Seconds()))
	if result2 != nil {
		alias2.Record(ctx, m.failedOps.M(1))
	}
	return result1, result2
}
func (m *monitoringOCService) DoWorkCtx(arg1 alias1.Context, arg2 int, arg3 string) (string, error) {
	ctx := arg1
	if m.ctxFunc != nil {
		ctx = m.ctxFunc(ctx)
	}
	tagKey := alias3.MustNewKey("operation")
	var err error
	if ctx, err = alias3.New(ctx, alias3.Insert(tagKey, "do_work_ctx")); err != nil {
		panic(err)
	}
	alias2.Record(ctx, m.totalOps.M(1))
	start := alias4.Now()
	result1, result2 := m.next.DoWorkCtx(arg1, arg2, arg3)
	alias2.Record(ctx, m.opsDuration.M(alias4.Since(start).Seconds()))
	if result2 != nil {
		alias2.Record(ctx, m.failedOps.M(1))
	}
	return result1, result2
}
