// Code generated by mongen. DO NOT EDIT.
package servicemws

import (
	"context"
	"time"

	alias1 "github.com/Makpoc/gentest"

	"go.opencensus.io/stats"
)

type monitoringService struct {
	next        Service
	totalOps    *stats.Int64Measure
	failedOps   *stats.Int64Measure
	opsDuration *stats.Float64Measure
}

// NewMonitoringService creates new monitoring middleware.
func NewMonitoringService(next alias1.Service, totalOps *stats.Int64Measure, failedOps *stats.Int64Measure, opsDuration *stats.Float64Measure) alias1.Service {
	return &monitoringService{next, totalOps, failedOps, opsDuration}
}

func (m *monitoringService) Work(ctx context.Context) error {
	stats.Record(ctx, m.totalOps.M(1))
	start := time.Now()
	err := m.next.Work(ctx)
	stats.Record(ctx, m.opsDuration.M(time.Since(start).Seconds()))
	if err != nil {
		stats.Record(ctx, m.failedOps.M(1))
	}
	return err
}